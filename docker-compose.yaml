version: '3.7'

services:
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
    ports:
      - "8090:8080"  # Порт для интерфейса Spark UI
      - "7077:7077"  # Порт для подключения воркеров
    volumes:
      - ./spark/jars:/opt/spark/jars  # Монтируем директорию с JAR-файлами
    networks:
      - spark-network

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=5g  # Ограничение памяти на воркер
    volumes:
      - ./spark/jars:/opt/spark/jars  # Монтируем директорию с JAR-файлами
    networks:
      - spark-network

  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${S3_ADMIN}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - spark-network
    command: server /data --console-address ":9001"

  airflow-webserver:
    image: apache/airflow:2.1.2
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@postgres/${DB_NAME}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${SECRET_KEY}
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
    ports:
      - "8081:8080"
    volumes:
      - ./dags:/opt/airflow/dags
    depends_on:
      - postgres
      - airflow-scheduler
    networks:
      - spark-network

  airflow-scheduler:
    image: apache/airflow:2.1.2
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@postgres/${DB_NAME}
    volumes:
      - ./dags:/opt/airflow/dags
    depends_on:
      - postgres
    networks:
      - spark-network

  airflow-init:
    image: apache/airflow:2.1.2
    entrypoint: /bin/bash -c "airflow db init"
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@postgres/${DB_NAME}
    volumes:
      - ./dags:/opt/airflow/dags
    depends_on:
      - postgres
    networks:
      - spark-network

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - spark-master
      - postgres
      - minio
    networks:
      - spark-network

volumes:
  postgres_data:
  minio_data:

networks:
  spark-network:
    driver: bridge

