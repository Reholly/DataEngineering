services:
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
    ports:
      - "8090:8080"
      - "7077:7077"
    volumes:
      - ./spark/jars:/opt/spark/jars
    networks:
      - spark-network

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=5g
    volumes:
      - ./spark/jars:/opt/spark/jars
    networks:
      - spark-network

  postgres:
    container_name: postgres
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${S3_ADMIN}
      MINIO_ROOT_PASSWORD: ${S3_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - spark-network
    command: server /data --console-address ":9001"

  airflow-webserver:
    container_name: airflow-webserver
    image: apache/airflow:2.1.2
    restart: always
    entrypoint: airflow webserver
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .\dags:/opt/airflow/dags
    depends_on:
      - postgres
      - airflow-scheduler
    networks:
      - spark-network

  airflow-scheduler:
    container_name: airflow-scheduler
    image: apache/airflow:2.1.2
    restart: always
    entrypoint: airflow scheduler
    env_file:
      - .env
    volumes:
      - .dags:/opt/airflow/dags
    depends_on:
      - postgres
    networks:
      - spark-network

  airflow-init:
    container_name: airflow-init
    image: apache/airflow:2.1.2
    entrypoint: /bin/bash -c "airflow db init && airflow users create admin"
    env_file:
      - .env
    volumes:
      - .dags:/opt/airflow/dags
    depends_on:
      - postgres
    networks:
      - spark-network

  clickhouse:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9002:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: ${CH_USER}
      CLICKHOUSE_PASSWORD: ${CH_PASSWORD}
      CLICKHOUSE_DB: ${CH_DB_NAME}
    networks:
      - spark-network

volumes:
  postgres_data:
  minio_data:
  clickhouse_data:

networks:
  spark-network:
    driver: bridge
